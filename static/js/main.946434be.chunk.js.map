{"version":3,"sources":["components/Header.js","components/Content.js","components/Footer.js","App.js","index.js"],"names":["Header","props","useState","loggedIn","setLoggedIn","useEffect","localStorage","getItem","className","id","balance","onClick","deleteData","title","xmlns","width","height","fill","viewBox","d","OverlayTrigger","trigger","placement","overlay","Popover","Content","onSubmit","e","preventDefault","setItem","target","username","value","onUserChange","console","log","InputGroup","FormControl","placeholder","aria-label","aria-describedby","name","required","Append","Button","type","variant","TableRow","data","slot","time","games","setGames","gameBox","setGameBox","slotsData","setSlotsData","playGame","debug","s1","Math","round","random","s2","s3","changeBalance","indexOf","game","date","Date","playDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","length","size","block","Modal","show","onHide","Body","map","s","idx","Footer","Table","bordered","hover","style","minWidth","colSpan","href","rel","App","toFixed","setbalance","n","Number","setUsername","localBalance","localUsername","u","onChange","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.946434be.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  OverlayTrigger,\r\n  Popover,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  useEffect(() => {\r\n    let localUsername = localStorage.getItem(\"username\");\r\n    if (localUsername) setLoggedIn(true);\r\n  }, []);\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"username\", e.target.username.value);\r\n    props.onUserChange(e.target.username.value);\r\n    console.log(e.target.username.value);\r\n    localStorage.setItem(\"balance\", props.balance);\r\n    setLoggedIn(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    props.deleteData();\r\n    setLoggedIn(false);\r\n  };\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"nav-logo\">\r\n        <div className=\"nav-logo-text\">Kasino</div>\r\n      </div>\r\n      <div className=\"nav-menu\">\r\n        <div className=\"nav-menu-item\">\r\n          <div id=\"balance\">${props.balance}</div>\r\n        </div>\r\n        {loggedIn ? (\r\n          <span\r\n            onClick={logout}\r\n            id=\"login-avatar\"\r\n            className=\"p-2 rounded-circle\"\r\n            title=\"Logout\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              fill=\"#ffffff\"\r\n              className=\"bi bi-person-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n            </svg>\r\n          </span>\r\n        ) : (\r\n          <div className=\"nav-menu-item\">\r\n            {/* Login button and pop-over */}\r\n            <OverlayTrigger\r\n              trigger=\"click\"\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Popover id=\"login-popover\">\r\n                  <Popover.Content>\r\n                    <form onSubmit={login}>\r\n                      <InputGroup>\r\n                        <FormControl\r\n                          placeholder=\"Username\"\r\n                          aria-label=\"Username\"\r\n                          aria-describedby=\"username\"\r\n                          name=\"username\"\r\n                          id=\"username\"\r\n                          required\r\n                        />\r\n                        <InputGroup.Append>\r\n                          <Button type=\"submit\" variant=\"outline-dark\">\r\n                            Go\r\n                          </Button>\r\n                        </InputGroup.Append>\r\n                      </InputGroup>\r\n                    </form>\r\n                  </Popover.Content>\r\n                </Popover>\r\n              }\r\n            >\r\n              <button className=\"my-btn my-btn-dark nav-button\">Login</button>\r\n            </OverlayTrigger>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./Content.css\";\r\nimport { Table, Button, Modal } from \"react-bootstrap\";\r\n\r\nconst TableRow = (props) => {\r\n  return (\r\n    <tr>\r\n      <td>{props.data.id}</td>\r\n      <td>{props.data.slot[0]}</td>\r\n      <td>{props.data.slot[1]}</td>\r\n      <td>{props.data.slot[2]}</td>\r\n      <td>{props.data.time}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst Content = (props) => {\r\n  // const gameData = [];\r\n  const [games, setGames] = useState([]);\r\n  const addGame = (game) => setGames([...games, game]);\r\n  const [gameBox, setGameBox] = useState(false);\r\n\r\n  // generate and set slots data\r\n  const [slotsData, setSlotsData] = useState([0, 0, 0]);\r\n  const playGame = (debug) => {\r\n    let s1 = Math.round(Math.random() * 8) + 1;\r\n    let s2 = Math.round(Math.random() * 8) + 1;\r\n    let s3 = Math.round(Math.random() * 8) + 1;\r\n    if (debug) [s1, s2, s3] = [7, 7, 7];\r\n    setSlotsData([s1, s2, s3]);\r\n\r\n    // give award based on slot numbers\r\n    if (s1 === s2 && s2 === s3 && s1 === s3 && s1 === 7)\r\n      props.changeBalance(10);\r\n    else if (s1 === s2 && s2 === s3 && s3 === s1) props.changeBalance(5);\r\n    else if (\r\n      [s1, s2].indexOf(s3) !== -1 ||\r\n      [s2, s3].indexOf(s1) !== -1 ||\r\n      [s1, s3].indexOf(s2) !== -1\r\n    )\r\n      props.changeBalance(0.5);\r\n    else props.changeBalance(-1);\r\n\r\n    // generate current date and create append new object\r\n    let date = new Date();\r\n    const playDate = `${date.getDate()}/${date.getMonth()}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    addGame({\r\n      id: games.length + 1,\r\n      slot: [s1, s2, s3],\r\n      time: playDate,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-dark text-light py-2\" id=\"content\">\r\n      <div className=\"container\">\r\n        <Button\r\n          className=\"mb-3\"\r\n          variant=\"outline-light\"\r\n          size=\"lg\"\r\n          block\r\n          onClick={() => setGameBox(true)}\r\n        >\r\n          Play\r\n        </Button>\r\n        <Modal show={gameBox} onHide={() => setGameBox(false)}>\r\n          <Modal.Body>\r\n            <div className=\"container\">\r\n              <div className=\"slots border\">\r\n                {slotsData.map((s, idx) => (\r\n                  <div key={idx} className=\"w-100 text-center slot-item\">\r\n                    {s}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"outline-dark\" onClick={() => playGame(false)}>\r\n              Play\r\n            </Button>\r\n            <Button variant=\"outline-warning\" onClick={() => playGame(true)}>\r\n              <i>Debug</i>\r\n            </Button>\r\n            <Button variant=\"outline-danger\" onClick={() => setGameBox(false)}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Table bordered hover variant=\"dark\" className=\"text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  width: \"50px\",\r\n                  minWidth: \"50px\",\r\n                }}\r\n              >\r\n                #\r\n              </th>\r\n              <th colSpan=\"3\">Slots</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {games.map((game) => {\r\n              return <TableRow key={game.id} data={game} />;\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div id=\"footer\">\r\n      <div id=\"footer-copyright\">\r\n        Copyright &copy; Paktolus Group LLC. All rights reserved\r\n      </div>\r\n      <div id=\"footer-links\">\r\n        <a href=\"http://paktolus.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Home\r\n        </a>\r\n        <a\r\n          href=\"http://paktolus.com/about-us\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          About Us\r\n        </a>\r\n        <a\r\n          href=\"http://paktolus.com/services\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Services\r\n        </a>\r\n        <a\r\n          href=\"http://paktolus.com/portfolio\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Portfolio\r\n        </a>\r\n        <a\r\n          href=\"http://jobs.paktolus.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Join Our Team\r\n        </a>\r\n        <a\r\n          href=\"http://paktolus.com/contact-us\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Contact Us\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  // track balance\n  const [balance, setbalance] = useState(\n    (Math.round(100 * 100) / 100).toFixed(2)\n  );\n  const changeBalance = (n) =>\n    setbalance((Math.round((Number(balance) + n) * 100) / 100).toFixed(2));\n\n  // track username\n  const [username, setUsername] = useState(\"\");\n  const changeUser = (u) => setUsername(u);\n\n  // initialise user, balance on page-load\n  useEffect(() => {\n    let localBalance = localStorage.getItem(\"balance\");\n    let localUsername = localStorage.getItem(\"username\");\n    if (localBalance) setbalance(localBalance);\n    if (localUsername !== null || localUsername !== \"\")\n      setUsername(localUsername);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"balance\", balance);\n    localStorage.setItem(\"username\", username);\n  }, [balance, username]);\n\n  // delete user data on logout\n  const deleteData = () => {\n    setbalance((Math.round(100 * 100) / 100).toFixed(2));\n    setUsername(\"\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"balance\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        balance={balance}\n        username={username}\n        onUserChange={changeUser}\n        onChange={changeBalance}\n        deleteData={deleteData}\n      />\n      <Content changeBalance={changeBalance} balance={balance} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}